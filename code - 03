import pygame
import sys
import math
import random
from pygame.locals import *
background = pygame.image.load('image jeux.png')
jeep = pygame.image.load('jeep.png')
obus = pygame.image.load('obus.png')
jeep_position = (500, 400)


def affichage_fenetre():
    """
    Fonction qui affiche une fenêtre avec une image de fond.
    """
    pygame.init()
    screen = pygame.display.set_mode((160, 120))
    pygame.display.set_caption(("Only Way Out"))
    pygame.blit(background(0 ,0))
    pygame.blit(jeep(jeep_position))
    pygame.display.update()


def moveup():
    jeep_position = jeep_position.move(0, 10)
    background.move(0, 10)


def movedown():
    jeep_position = jeep_position.move(0, -10)
    background.move(0, -10)


def moveleft():
    jeep_position = jeep_position.move(-10, 0)
    background.move(-10, 0)


def moveright():
    jeep_position = jeep_position.move(10, 0)
    background.move(10, 0)


def mouvement():
    """
    Fonction qui gère les déplacements du personnage.
    """
    continuer = 1    
    
    while continuer == 1:
        for event in pygame.event.get():
            if event.type == KEYDOWN:
                if event.key == K_UP:
                    moveup()
                    pygame.display.update()
                if event.key == K_DOWN:
                    movedown()
                    pygame.display.update()
                if event.key == K_RIGHT:
                    moveright()
                    pygame.display.update()
                if event.key == K_LEFT:
                    moveleft()
                    pygame.display.update()
                if (evenement.key == K_ESCAPE):
                    continuer = 0
                    pygame.quit() # On quitte le programme.
                    
                pygame.display.update()
    return continuer

def liste_tank_et_bunker():
    """
    Fonction qui n'a pas de rôle particulier mais qui permet de 
    regrouper toutes les liste de tuples des différents types de
    tourelles.
    """
    
    tank_bas = [(108,609), (321,611), (205,548), (118,412), (71,375), (531,341), (746,532), (335,78)]    
    tank_haut = [(30,710), (203,686), (205,528), (174,474), (232,475), (93,455), (90,266), (152,275), (322,408), (447,441), (608,440), (666,412), (734,473), (727,644), (894,613), (830,408), (707,344), (798,273), (669,271), (417,269), (754,150), (561,146), (464,140), (262,186), (145,80), (59,84)]
    tank_gauche = [(367,654), (320,439), (427,536), (596,585), (425,341), (952,562), (930,455), (654,200), (415,150), (155,165), (974,420), (980,303), (960,167), (322,25), (450,25), (647,25)]
    tank_droite = [(23,654), (99,664), (253,310), (562,509), (505,446), (832,343), (754,205), (345,206), (928,358)]







def tir_bas():
    """
    variation des positions des image obus pour les tirs.
    """
    while True:
        for tankb in tank_bas:
            temps = pygame.time.get_ticks()
            if temps % 2000 == 0:
                pygame.image.load(obus_1(tankb))
                obus_1_position = tankb
            if temps % 500 == 0:
                obus_1_position.move(0, -30)

def tir_haut():

    while True:
        for tankh in tank_haut:
            temps = pygame.time.get_ticks()
            if temps % 2000 == 0:
                pygame.image.load(obus_2(tankh))
                obus_2_position = tankh 
            if temps % 500 == 0:
                obus_2_position.move(0, 30)


def tir_gauche():

    while True:
        for tankg in tank_gauche:
            temps = pygame.time.get_ticks()
            if temps % 2000 == 0:
                pygame.image.load(obus_3(tankg))
                obus_3_position = tankh 
            if temps % 500 == 0:
                obus_3_position.move(-30, 0)


def tir_droite():

    while True:
        for tankd in tank_droite:
            temps = pygame.time.get_ticks()
            if temps % 2000 == 0:
                pygame.image.load(obus_4(tankd))
                obus_4_position = tankd 
            if temps % 500 == 0:
                obus_4_position.move(0, 30)


voila une reformulation de ta fin de jeu plus concise.

position_fin_hauteur = [1050 , 1051 , 1052 , 1053 , 1054 , 1055 , 1056 , 1057 , 1058 , 1059 , 1060]
position_fin_longueur = [40 , 41 , 42 , 43 , 44 , 45 , 46 , 47 , 48 , 49 , 50]
for h in position_fin_hauteur:
        for l in position_fin longueur:
          if jeep_position[0] == h and jeep_position[1] == l:
            pygame.quit()
